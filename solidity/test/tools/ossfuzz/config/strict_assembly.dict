" -> "
" := "
" address() "
" calldatasize() "
" caller() "
" callvalue() "
" codesize() "
" coinbase() "
" difficulty() "
" gas() "
" gaslimit() "
" gasprice() "
" invalid() "
" number() "
" origin() "
" pc() "
" returndatasize() "
" stop() "
" timestamp() "
"("
")"
", "
"0x42"
"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
":"
"add("
"addmod("
"and("
"balance("
"blockhash("
"byte("
"call("
"callcode("
"calldatacopy("
"calldataload("
"case "
"codecopy("
"create("
"create2("
"default "
"delegatecall("
"div("
"eq("
"exp("
"extcodecopy("
"extcodehash("
"extcodesize("
"for "
"function "
"gt("
"hello"
"if "
"iszero("
"keccak256("
"let "
"log0("
"log1("
"log2("
"log3("
"log4("
"lt("
"mload("
"mod("
"msize"
"mstore("
"mstore8("
"mul("
"mulmod("
"not("
"or("
"pop("
"return("
"returndatacopy("
"revert("
"sar("
"sdiv("
"selfdestruct("
"sgt("
"shl("
"shr("
"signextend("
"sload("
"slt("
"smod("
"sstore("
"staticcall("
"sub("
"switch "
"xor("
"{"
"}"
